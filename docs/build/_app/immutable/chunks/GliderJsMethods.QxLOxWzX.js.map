{"version":3,"file":"GliderJsMethods.QxLOxWzX.js","sources":["../../../../../../../examples/GliderJsMethods.svelte?raw"],"sourcesContent":["export default \"<script context=\\\"module\\\">\\n  const example = \\\"GliderJsMethods\\\"\\n</script>\\n\\n<script lang=\\\"ts\\\">\\n  import type {SvelteComponent} from 'svelte'\\n  import {onMount} from 'svelte'\\n\\n  import type {GliderMethods} from '..'\\n  import Glider from '..'\\n  import Details from './lib/Details.svelte'\\n\\n  let gliderRef:  SvelteComponent\\n  let gliderJs:   GliderMethods\\n\\n  const randomize = () => {\\n    if (gliderJs) {\\n      const random = Math.floor(Math.random() * 12)\\n      gliderJs.scrollItem(random)\\n    }\\n  }\\n\\n  onMount(() => {\\n    gliderJs = gliderRef?.getGliderJs()\\n  })\\n</script>\\n\\n<div class=\\\"container\\\">\\n  <button type=\\\"button\\\" on:click={randomize}>\\n    Scroll to random item\\n  </button>\\n  <Glider\\n    class=\\\"glider-container\\\"\\n    draggable\\n    hasDots\\n    slidesToShow={1}\\n    scrollLock\\n    bind:this={gliderRef}\\n  >\\n    <div class=\\\"slide\\\">\\n      <span>1</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>2</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>3</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>4</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>5</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>6</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>7</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>8</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>9</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>10</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>11</span>\\n    </div>\\n    <div class=\\\"slide\\\">\\n      <span>12</span>\\n    </div>\\n  </Glider>\\n  <Details {example} />\\n</div>\\n\""],"names":["GliderJsMethods"],"mappings":"AAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}